java -jar target/benchmarks.jar -help

---- Measure ----
// 18 hrs
java -jar target/benchmarks.jar -wi 20 -i 20 -f 4 -tu ns -bm avgt -rf text -rff results/benchmarks-8.txt -o log.txt

// 5 hrs
java -jar target/benchmarks.jar -wi 20 -i 10 -f 2 -tu ns -bm avgt -rf text -rff results/benchmarks-8.txt -o log.txt

// 2 hrs
java -jar target/benchmarks.jar -wi 20 -i 10 -f 1 -tu ns -bm avgt -rf text -rff results/benchmarks-8.txt -o log.txt

---- Fast check ----
java -jar target/benchmarks.jar -wi 0 -i 1 -f 1 -tu ns -bm avgt

---- Most stable result ----
// `taskset` is available only on Linux; can run without it but there will be some fluctuations
taskset 0x01 java -Djmh.blackhole.mode=COMPILER -jar target/benchmarks.jar -wi 2 -w 1 -i 3 -r 1 -f 10 -bm sample \
    -p size=100000 -p smallSize=1000 -p vectorSize=65536 -p hugeSize=10000000 -gc false -rf json -rff report/benchmarks.ir.json -o report/log.ir.txt

---- Baseline ----
java -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu ns -bm avgt -rf json -rff report/benchmarks.json ".*Baseline.*"

---- Analyse ----


java -XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu ms ".*Inline.*"
java -XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu ms ".*Inline.*"
java -XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -jar target/benchmarks.jar -wi 1 -i 5 -f 1 -tu us -bm avgt -prof comp ".*Inline.*calculateInline.*"
java -XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+PrintCompilation -XX:+LogCompilation -XX:+PrintAssembly -jar target/benchmarks.jar -wi 1 -i 5 -f 1 -tu us -bm avgt -prof comp ".*Inline.*calculateInline.*"

javap -c target/classes/org/jetbrains/... > temp.asm

-- yourkit ---
-agentpath:/Applications/YourKit\ 2013.app/bin/mac/libyjpagent.jnilib
java -agentpath:/Applications/YourKit\ 2013.app/bin/mac/libyjpagent.jnilib -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu ns -bm avgt "Class.*Stream.*filterAndMapSeq.*" -p size="1000" -prof stack

---- TEMP ----
java -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu ns -bm avgt ".*IntList.*"
java -jar target/benchmarks.jar -wi 1 -i 5 -f 1 -tu us -bm avgt -prof comp ".*Inline.*calculateInline.*"
java -jar target/benchmarks.jar -wi 1 -i 5 -f 1 -tu us -bm avgt ".*Inline.*calculateInline.*"
java -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu ms ".*IntList.*"
java -jar target/benchmarks.jar -wi 20 -i 20 -f 1 -tu ms -rf text -rff results/benchmarks-8-tiny.txt

java -XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -jar target/benchmarks.jar -wi 5 -i 5 -f 1 -tu us -p size="10000" "stringConcatNullable"
java6 -jar target/benchmarks.jar -wi 5 -i 5 -f 1 -tu us -p size="10000" "stringConcatNullable"
java -jar target/benchmarks.jar -wi 5 -i 5 -f 1 -tu us -p size="10000" "stringConcatNullable"


java -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu ns -bm avgt ".*Baseline.*consume.*" -rf text -rff results/benchmarks-8-consume.txt
java -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu ns -bm avgt ".*JavaStream.*" -rf text -rff results/benchmarks-8-java-stream.txt
java -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu ns -bm avgt "\.ClassStream.*" -p size="1000"
java -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu us -bm avgt "Class.*Stream.*filterAndMap.*" -p size="1000"
java -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu us -bm avgt "Class" -p size="100000" -rf text -rff results/benchmarks-8-class-100000.txt
java -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu us -bm avgt "Class" -p size="1000" -rf text -rff results/benchmarks-8-class.txt
java -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu us -bm avgt "Class" -p size="100" -rf text -rff results/benchmarks-8-class-100.txt

java -jar target/benchmarks.jar -wi 10 -i 5 -f 1 -tu us -bm avgt -p size="100000" -rf text -rff results/benchmarks-8-100000.txt


java -jar target/benchmarks.jar -wi 5 -i 5 -f 1 -tu ms -bm avgt -p size="1000000" ".*OSR.*"
java -XX:+UnlockDiagnosticVMOptions -XX:+LogCompilation -jar target/benchmarks.jar -wi 1 -i 5 -f 1 -tu us -bm avgt ".*OSR.*"

/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/bin/java -jar target/benchmarks.jar -wi 5 -i 5 -f 1 -tu ns -bm avgt -p size="1000" -rf text -rff results/benchmark-8-inline.txt ".*OSR.*"

-- LINUX ---
/usr/java64/jdk1.8.0_11/bin/java -jar target/benchmarks.jar -wi 5 -i 5 -f 1 -tu ns -bm avgt -prof perfasm -rf text -rff results/benchmark-8-asm.txt

/usr/java64/jdk1.8.0_11/bin/java -jar target/benchmarks.jar -wi 5 -i 5 -f 1 -tu ns -bm avgt -prof perfasm -rf text -rff results/benchmark-8-inline-asm.txt ".*Inline.*calculateInline"
/usr/java64/jdk1.8.0_20/bin/java -jar target/benchmarks.jar -wi 5 -i 5 -f 1 -tu ns -bm avgt -prof perfasm ".*Inline.*calculateInline" > log_20
/usr/java64/jdk1.8.0_11/bin/java -jar target/benchmarks.jar -wi 5 -i 5 -f 1 -tu ns -bm avgt -prof perfasm ".*Inline.*calculateInline" > log_11